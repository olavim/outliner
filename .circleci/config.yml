build_defaults: &build_defaults
  steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build $SERVICE Docker image
        command: docker build -t olavim/outliner-$SERVICE:$TAG -f docker/$SERVICE.Dockerfile .
    - run:
        name: Archive $SERVICE Docker image
        command: docker save -o image.tar $IMAGE_NAME
    - persist_to_workspace:
        root: .
        paths:
          - ./image.tar
deploy_defaults: &deploy_defaults
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Load archived $SERVICE Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Publish $SERVICE Docker image to Docker Hub
        command: |
          echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
          docker push olavim/outliner-$SERVICE:$TAG

version: 2.1
executors:
  client-docker-publisher:
    environment:
      TAG: 1.0.$CIRCLE_BUILD_NUM
      SERVICE: client
    docker:
      - image: circleci/buildpack-deps:stretch
  server-docker-publisher:
    environment:
      TAG: 1.0.$CIRCLE_BUILD_NUM
      SERVICE: server
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build-client:
    executor: client-docker-publisher
    <<: *build_defaults
  build-server:
    executor: server-docker-publisher
    <<: *build_defaults
  deploy-client:
    executor: client-docker-publisher
    <<: *deploy_defaults
  deploy-server:
    executor: server-docker-publisher
    <<: *deploy_defaults

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build-client
      - build-server
      - deploy-client:
          requires:
            - build-client
          filters:
            branches:
              only: server
      - deploy-server:
          requires:
            - build-server
          filters:
            branches:
              only: server
